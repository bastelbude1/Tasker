# TEST_METADATA: {"description": "Test stdout_split with newline, colon, semicolon delimiters", "test_type": "positive", "expected_exit_code": 0, "expected_success": true, "skip_host_validation": true}
# Test case for new delimiter keywords
# Tests newline, colon, semicolon delimiters and backward compatibility

# Global variables
HOSTNAME=localhost
EXEC=local

# Task 0: Simple success task to enable Task 1
task=0
hostname=@HOSTNAME@
exec=@EXEC@
command=echo
arguments=Ready for newline test
success=exit_0

# Task 1: Test newline delimiter - generate and split multi-line output
task=1
condition=@0_success@
hostname=@HOSTNAME@
exec=@EXEC@
command=printf
arguments="alpha\nBETA_TARGET\ngamma"
stdout_split=newline,1
success=stdout=BETA_TARGET

# Task 2: Generate colon-separated output for colon testing
task=2
condition=@1_success@
hostname=@HOSTNAME@
exec=@EXEC@
command=echo
arguments=first:SPLIT_TARGET:third
success=exit_0

# Task 3: Test colon delimiter - extract middle part (index 1)
task=3
condition=@2_success@
hostname=@HOSTNAME@
exec=@EXEC@
command=echo
arguments=@2_stdout@
stdout_split=colon,1
success=stdout=SPLIT_TARGET

# Task 4: Generate semicolon-separated output for semicolon testing
task=4
condition=@3_success@
hostname=@HOSTNAME@
exec=@EXEC@
command=printf
arguments=alpha;beta;GAMMA;delta
success=exit_0

# Task 5: Test new semicolon delimiter - get third option (index 2)
task=5
condition=@4_success@
hostname=@HOSTNAME@
exec=@EXEC@
command=printf
arguments=alpha;beta;GAMMA;delta
stdout_split=semicolon,2
success=stdout=GAMMA

# Task 6: Test backward compatibility - old 'semi' delimiter should still work
task=6
condition=@5_success@
hostname=@HOSTNAME@
exec=@EXEC@
command=printf
arguments=alpha;beta;GAMMA;delta
stdout_split=semi,3
success=stdout=delta
next=exit_0