# TEST_METADATA: {"description": "Success Check Block with on_success/on_failure routing", "test_type": "positive", "expected_exit_code": 0, "expected_success": true, "expected_execution_path": [0, 1, 20, 21], "expected_final_task": 21, "expected_variables": {"0_stdout": "initialization", "1_stdout": "running", "20_stdout": "success path executed", "21_stdout": "workflow completed"}}

# Test case for Success Check Block with on_success/on_failure routing
# Task 1 checks success condition: success=exit_0&stdout~running
# If success (exit 0 and stdout contains "running") -> jump to task 20
# If failure -> jump to task 99

HOSTNAME=localhost

task=0
hostname=@HOSTNAME@
exec=local
command=controlled_output.sh
arguments=0 "initialization" "NONE"

task=1
hostname=@HOSTNAME@
exec=local
command=controlled_output.sh
arguments=0 "running" "NONE"
success=exit_0&stdout~running
on_success=20
on_failure=99

# Success path (task 20-21)
task=20
hostname=@HOSTNAME@
exec=local
command=controlled_output.sh
arguments=0 "success path executed" "NONE"

task=21
hostname=@HOSTNAME@
exec=local
command=controlled_output.sh
arguments=0 "workflow completed" "NONE"
next=never

# Failure path - End Failure Block (task 99)
task=99
hostname=@HOSTNAME@
exec=local
command=controlled_output.sh
arguments=1 "failure path executed" "error condition met"
next=never
return=1