# TEST_METADATA: {"description": "Resume from parallel task coordinator", "test_type": "positive", "expected_exit_code": 0, "expected_success": true, "start_from_task": 5, "expected_execution_path": [5, 10], "skip_host_validation": true, "expected_warnings": 1}

# Resume Capability Test: Resume Into Parallel Block
#
# Purpose: Validate resume works with parallel task execution
#
# Test Scenario:
# 1. Task 0-2: Skipped (before resume point)
# 2. Task 5: Resume point (parallel coordinator)
# 3. Tasks 5-10, 5-11, 5-12: Parallel subtasks (should all execute)
# 4. Task 10: Next sequential task after parallel
#
# Expected Behavior:
# - Resume from task 5 (parallel coordinator)
# - All parallel subtasks (5-10, 5-11, 5-12) execute
# - Task 10 executes after parallel completion
# - Exit code: 0 (success)

# Tasks before resume point (will be skipped)
task=0
hostname=localhost
command=echo
arguments=Task 0 - Should be skipped
exec=local

task=1
hostname=localhost
command=echo
arguments=Task 1 - Should be skipped
exec=local

task=2
hostname=localhost
command=echo
arguments=Task 2 - Should be skipped
exec=local

# Resume point - task 5 (parallel coordinator)
task=5
type=parallel
max_parallel=3
tasks=10,11,12
success=all_success

# Parallel subtasks
task=10
hostname=localhost
command=echo
arguments=Parallel Task 10
exec=local

task=11
hostname=localhost
command=echo
arguments=Parallel Task 11
exec=local

task=12
hostname=localhost
command=echo
arguments=Parallel Task 12
exec=local

# Next sequential task
task=10
hostname=localhost
command=echo
arguments=Task 10 - After parallel block
exec=local
